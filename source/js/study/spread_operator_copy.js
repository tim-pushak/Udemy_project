"use strict";

// SPREAD operator ES6 - ES9 //////////  COPY  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


const video = ['youtube', 'vimeo', 'rutube'],
      blogs = ['wordpress', 'livejournal', 'blogger'],
      internet = [...video, ...blogs, 'vk', 'facebook'];

console.log(internet); // the best thing '...' and then name of const //
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function log(a, b, c) {
    console.log(a);
    console.log(b);
    console.log(c);
}

const num = [2, 5, 7];

log(...num); 

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

 
const array = ["a", "b"];
const newArray = [...array];
newArray[0] = "c";

console.log(newArray);
console.log(array); // how copy without slice(); //

/// what about objects? just make the same thing that you did with arrayes //

const q = {
    one: 1,
    two: 2
};

const newQ = {...q}; // that's it) //


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////



let a = 5;
    b = a;

b = b + 5;

console.log(b); // it works only with simple things like this //

const obj = {
    a: 5,
    b: 1
};

const copy = obj;

copy.a = 10;

console.log(copy);
console.log(obj); // this example how it doesn't works in difficult things like this and arrayes // 
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// i write down example where it works with anything, but notice that it is only поверхосной тип copy(not global: "x" doesn't change) ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

 function copy(mainObj) {
    let objCopy = {};

    let key;

    for (key in mainObj) {
        objCopy[key] = mainObj[key];
    }

    return objCopy;
}

const numbers = {
    a: 5,
    b: 3,
    c: {
        x: 20,
        y: 10
    }
};

const newNumbers = copy(numbers);
newNumbers.a = 10;


// console.log(newNumbers);
// console.log(numbers);
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///// 
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const add = {
    vasya: 1,
    what: 10
};

// console.log(Object.assign(numbers, add)); // на першому місці куда закидувати об'єкт а на другому який закидувати //
const clone = (Object.assign({}, add));
clone.vasya = 10;

// console.log(add);
// console.log(clone); 

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////now let's talk about copy arrayes /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


const oldArray = ['a', 'b', 'c'];
const newArrey = oldArray.slice();  // also you can do this: const newArrey = [...oldArray];

newArrey[1] = 'vasya&vasya';

console.log(oldArray);
console.log(newArrey);